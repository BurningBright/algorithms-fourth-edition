class0201
	AnimationShellSort.java				2.1.0			希尔排序可视化/VisualTraces
	AnimationSortCompare.java			2.1.17/18		选择、插入排序的可视化/VisualTraces
	DequeueSort.java					2.1.14			出队排序，感觉效率好低
	DrawDistributions.java				2.1.35			画出各非随机分布样本
	EqualKeys.java						2.1.28			仅有俩key的样本排序性能测试
	InsertionInThree.java				2.1.8			插入排序随机三元素样本结果相同
	InsertionSort.java					2.1.4/24		插入排序/哨兵性能区别不大
	InstrumentShell.java				2.1.12/27		希尔排序性能测试
	NonuniformData.java					2.1.36			不规则分布数据
	PartiallySorted						2.1.37			部分有序数据
	SelectionSort.java					2.1.1			选择排序
	ShellSort.java						2.1.9			希尔排序
	ShellSortIncrements.java			2.1.29			希尔增量序列，提升28%左右
	SortCompare.java					2.1.25			插排对比性能提升约40%
	TimePlot.java						2.1.32			时间分布工具
class0202
	AnimationMergeSort.java				2.2.0			合并排序可视化
	AnimationMergeSortCompare.java		2.2.0			合并BU&TD动画可视化追踪
	FastMerge.java						2.2.10/9		右半边的倒序拷贝减少合并的边界检测
	FindSubArray.java					2.2.5			统计排序过程中的子数组数
	IndirectMergeSort.java				2.2.20			间接合并排序，排的是下标
	MergeBU.java						2.2.2			自底向上循环的合并排序
	MergeBUinQueue.java					2.2.15			自底向上的队列排序，包括循环、递归方式
	MergeImprov.java					2.2.11			优化合并，判断左右、加入插排、取消拷贝-_-
	MergeQueue.java						2.2.14			队列的合并排序
	MergeTD.java						2.2.1/3/8		自顶向下递归的合并排序
	NaturalMergeInLinked.java			2.2.17			链表的自然合并：通过检查是否符合顺序，找出左右两有序部分，将他们合并，递归检查是否全局有序。
	NaturalMergeSort.java				2.2.16			自然合并排序
	ShufflingLinkedList.java			2.2.18			分合算法打乱链表
	SublinearESP.java					2.2.12			将额外空间变得次线性
	ThreeWayMergeSort.java				2.2.22			三道合并[BT]
	Triplicates.java					2.2.21			寻找相同元素
class0203
	AnimationQuickSort.java				2.3.0			快排可视化
	BestCase.java						2.3.16			生成最佳案例，任不是最佳
	CornerCases.java					2.3.30			快排的边际案例被打乱所受影响
	CountExactCn.java					2.3.6/7/8		接近理论值，不到理论值
	CutoffToInsertion.java				2.3.25/26		子数组在低于阀值时用插排
	Fast3Way.java						2.3.22			三道快排的另一种思路
	IgnoreSmallSubarrays.java			2.3.27			使用子数组于阀的另一种思路
	HistogramOfRunningTimes.java		2.3.31			快速排序的幂次时间分布
	MedianCompare.java					2.3.19			对比Quick&M3&M5的性能，M3最好
	MedianOfFive.java					2.3.19			使用五元素中间元素做标杆与lo交换，再做快排
	MedianOfThree.java					2.3.18			使用三元素中间元素做标杆与lo交换，再做快排
	NonrecursiveQuickSort.java			2.3.20			用循环实现快速排序
	RandomizationSort.java				2.3.29			使用随机下标元素做标杆与lo交换，再做快排
	RecursionDepth.java					2.3.28			使用了阀值后的快排深度
	ScanOverEqual.java					2.3.11			跳过相等key，后序整合，感觉效率不高
	Sentinels.java						2.3.17			哨兵使得partition里跳过越界检查
	TukeyNinther.java					2.3.23			使用九元素中间元素做标杆返回标杆下标
	TwoKeyAlgorithm.java				2.3.5			排两个key的样本
class0204
	AnimationHeapSort.java				2.4.0			堆排可视化
	AuthenticateHeap.java				2.4.15			对堆架构的验证，参考是用递归分叉检验
	CubeSum.java						2.4.25			找到立方相等的组，可以联想到所有组合问题
	DiscreteDistribution.java			2.4.35			离散随机分布
	DynamicMedianFinding.java			2.4.30			动态构建查找中位数的结构
	ExerciseDriver.java					2.4.38			边际案例 时间：乱序>顺序>双键>=同键>倒序
	FloydMaxPQ.java						2.4.40			弗洛伊德方法加速沉降，转而为更快的上浮
	LinkPQ.java							2.4.24			使用3链接组成优先堆队列
	MaxArrayPQ.java						2.4.3			用数组+插排方式/暴力方式实现的有序/无序优先队列
	MaxListPQ.java						2.4.3			用链表+插排方式/暴力方式实现的有序/无序优先队列
	MinMaxPQ.java						2.4.29			组合数据结构，牺牲生产性能，加速消费性能
	PerformanceDriverI.java				2.4.36			测试随机弹压优先队列的耗时
	PerformanceDriverII.java			2.4.37			测试每秒随机弹压优先队列的次数
	PreorderHeap.java					2.4.42			前序结构堆，用数组实现还是太勉强了
	SelectionFilter.java				2.4.28			使用堆结构对数据流筛选数据
class0205
	DedupArraySort.java					2.5.4			剔除重复排序
	FindCompoundWord.java				2.5.2			找词组单词